name: Create GitHub Release

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Create GitHub Release
        id: create-release
        run: |
          commit_message=$(git log -1 --pretty=%B)

          # Extract version tag (e.g., v0.0.1-alpha.1.6.4.1)
          tag_name=$(echo $commit_message | grep -o -E "v[0-9]+\.[0-9]+\.[0-9]+(-\w+\.\d+\.\d+\.\d+)?" || true)

          # Set the prerelease flag if the commit message contains "alpha"
          if [[ $commit_message == *"alpha"* ]]; then
            prerelease="true"
          else
            prerelease="false"
          fi

          # If tag_name is empty, exit without creating a release
          if [ -z "$tag_name" ]; then
            echo "No valid version found in the commit message."
            exit 0
          fi

          release_title="Release $tag_name"
          release_notes="This is the release notes for $tag_name"

          echo "Creating GitHub release..."
          echo "Tag Name: $tag_name"
          echo "Release Title: $release_title"
          echo "Release Notes: $release_notes"
          echo "Is Pre-Release: $prerelease"

          response=$(curl -X POST "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" \
            -H "Authorization: Bearer ${{ secrets.CREATE_RELEASE_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "'"$tag_name"'",
              "name": "'"$release_title"'",
              "body": "'"$release_notes"'",
              "draft": false,
              "prerelease": '"$prerelease"'
            }')

          echo "GitHub release created."
          echo "Response:"
          echo "$response"

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
