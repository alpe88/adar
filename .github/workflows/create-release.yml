name: Create GitHub Release

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check Commit Message
        id: check-commit
        run: echo "::set-output name=contains_new_version::$(git log -1 --pretty=%B | grep -i 'new version release' || true)"

      - name: Check for Alpha Version
        id: check-alpha
        run: echo "::set-output name=contains_alpha::$(echo '${{ steps.check-commit.outputs.contains_new_version }}' | grep -i 'alpha' || true)"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Get Version from package.json
        id: get-version
        run: echo "::set-output name=package_version::$(node -e 'console.log(require("./package.json").version)')"

      - name: Create GitHub Release
        if: steps.check-commit.outputs.contains_new_version == 'new version release'
        id: create-release
        run: |
          tag_name="${{ steps.get-version.outputs.package_version }}"
          release_title="Release v${{ steps.get-version.outputs.package_version }}"
          release_notes="This is the release notes for v${{ steps.get-version.outputs.package_version }}"

          # Check if the commit message contains "alpha" and set the prerelease flag accordingly
          if [ "${{ steps.check-alpha.outputs.contains_alpha }}" ]; then
            prerelease="true"
          else
            prerelease="false"
          fi

          echo "Creating GitHub release..."
          echo "Tag Name: $tag_name"
          echo "Release Title: $release_title"
          echo "Release Notes: $release_notes"
          echo "Is Pre-Release: $prerelease"

          # Create the release using the GitHub API
          response=$(curl -X POST "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "tag_name": "'"$tag_name"'",
              "name": "'"$release_title"'",
              "body": "'"$release_notes"'",
              "draft": false,
              "prerelease": '"$prerelease"'
            }')

          echo "GitHub release created."
          echo "Response:"
          echo "$response"

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
